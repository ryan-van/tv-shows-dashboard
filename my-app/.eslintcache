[{"C:\\Users\\Ryan\\info253\\tv-shows-dashboard\\my-app\\src\\reportWebVitals.js":"1","C:\\Users\\Ryan\\info253\\tv-shows-dashboard\\my-app\\src\\App.js":"2","C:\\Users\\Ryan\\info253\\tv-shows-dashboard\\my-app\\src\\index.js":"3"},{"size":362,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":4036,"mtime":1606358584084,"results":"6","hashOfConfig":"5"},{"size":507,"mtime":1606259789389,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vhijvr",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\Ryan\\info253\\tv-shows-dashboard\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Ryan\\info253\\tv-shows-dashboard\\my-app\\src\\App.js",["16"],"import React, { useState, useEffect } from \"react\";\nimport \"./index.css\"\n\nconst APIKEY = '8891d5cefed0da21234ba062e1c9a7d7';\nconst baseURL = 'https://api.themoviedb.org/3/';\n// https://api.themoviedb.org/3/tv/2316/season/{season_number}?api_key=8891d5cefed0da21234ba062e1c9a7d7&language=en-USt\n// GET /tv/{tv_id}\n// https://api.themoviedb.org/3/tv/2316?api_key=8891d5cefed0da21234ba062e1c9a7d7&language=en-US\n\n// GET /tv/{tv_id}/season/{season_number}\n// https://api.themoviedb.org/3/tv/2316/season/1?api_key=8891d5cefed0da21234ba062e1c9a7d7&language=en-US\n\nfunction SearchBar(props) {\n  return (\n    <div className='center'>\n    <form onSubmit={props.handleSubmit}>\n      <label>TV Show: </label>\n      <input type=\"text\" name=\"show\" />\n      <input type=\"submit\" value=\"Search Show\" />\n    </form>\n    </div>\n  );\n}\n\nfunction RenderTable(props) {\n  if (Object.keys(props.data).length === 0 && props.data.constructor === Object) {\n    return (<h1>Enter a search query</h1>)\n  }\n  // TODO: GET RID OF THIS & add error handling for missing stuff\n  if (props.data.id === 7089) {\n    return (<h1>Enter a search query</h1>)\n  }\n  console.log(props.data);\n  console.log(props.data.seasons);\n\n  let all_seasons = [];\n  let season;\n  for (let i = 1; i <= props.data.num_seasons; i++) {\n    let season_number = 'season' + i;\n    season = <tr>\n      {props.data.seasons[season_number].map(index => (\n       <td data-value={index}> {index} </td>\n      ))}\n    </tr>\n    all_seasons.push(season);\n  }\n\n  return (\n    <table>\n      {all_seasons}\n    </table>\n  );\n\n}\n\nasync function fetchId(query) {\n  const url = ''.concat(baseURL, 'search/tv?api_key=', APIKEY, '&query=', encodeURIComponent(query), '&include_adult=false');\n  let response = await fetch(url);\n  let json_response = await response.json();\n  return json_response.results[0].id;\n}\n\nasync function fetchNumSeasons(id) {\n  let url = ''.concat(baseURL, 'tv/', id, '?api_key=', APIKEY, '&language=en-US');\n  let response = await fetch(url);\n  let json_response = await response.json();\n  let numSeasons = 0;\n  for (let x = 0; x < json_response.seasons.length; x++) {\n    if (json_response.seasons[x].season_number !== 0) {\n      numSeasons += 1;\n    }\n  }\n  return numSeasons;\n}\n\nasync function fetchSeasons(id, numSeasons) {\n  var newSeasons = {};\n  for (let i = 1; i <= numSeasons; i++) {\n    let url = ''.concat(baseURL, 'tv/', id, '/season/', i, '?api_key=', APIKEY, '&language=en-US');\n    let response = await fetch(url);\n    let json_response = await response.json();\n    let episodeRatings = [];\n    for (let j = 0; j < json_response.episodes.length; j++) {\n      episodeRatings.push(json_response.episodes[j].vote_average);\n    }\n    newSeasons['season' + String(i)] = episodeRatings;\n  }\n  return newSeasons;\n}\n\nfunction Page() {\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let newValues = {};\n    newValues.query = event.target.show.value;\n    setValues(newValues);\n  }\n\n  useEffect (() => {\n    async function fetchData() {\n      let id = await fetchId(values.query);\n      let newValues = JSON.parse(JSON.stringify(values));;\n      newValues.id = id;\n\n      let numSeasons = await fetchNumSeasons(id);\n      let seasons = await fetchSeasons(id, numSeasons);\n      newValues.num_seasons = numSeasons;\n      newValues.seasons = seasons;\n      setValues(newValues);\n    }\n    fetchData();\n  }, [values.query]);\n  \n  return (\n    <div>\n      <SearchBar handleSubmit={handleSubmit} />\n      <br />\n      <div style={{marginLeft: '10%'}}>\n        <p>Episode Number</p>\n      </div>\n      <div style={{width: '100%'}}>\n        <div style={{width: '10%', float: 'left'}}>\n          <p>Season Number</p>\n        </div>\n        <div style={{marginLeft: '10%'}}>\n          <RenderTable data={values}/>\n        </div>\n      </div> \n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"></header>\n      <div><Page /></div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Ryan\\info253\\tv-shows-dashboard\\my-app\\src\\index.js",["17"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// api key: 8891d5cefed0da21234ba062e1c9a7d7\n// api read access token: eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ODkxZDVjZWZlZDBkYTIxMjM0YmEwNjJlMWM5YTdkNyIsInN1YiI6IjVmOGQzYTQ1Mzk3ZGYwMDAzOTVhMjNiNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.mW_2Hf7S5Q17hc3VX0vZRVhpsNOQX9hDV7kA5pHw0e0\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);",{"ruleId":"18","severity":1,"message":"19","line":114,"column":6,"nodeType":"20","endLine":114,"endColumn":20,"suggestions":"21"},{"ruleId":"22","severity":1,"message":"23","line":5,"column":8,"nodeType":"24","messageId":"25","endLine":5,"endColumn":23},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array.","ArrayExpression",["26"],"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar",{"desc":"27","fix":"28"},"Update the dependencies array to be: [values, values.query]",{"range":"29","text":"30"},[3422,3436],"[values, values.query]"]